{"version":3,"sources":["logo.svg","card.js","App.js","serviceWorker.js","detail.js","favs.js","index.js"],"names":["module","exports","Card","cancel","props","Title","Year","Poster","markFav","isFav","imdbID","Released","Type","data","hideButton","console","log","className","to","undefined","src","alt","Button","color","onClick","CancelToken","axios","getFavs","localData","a","item","b","push","App","storage","JSON","parse","window","localStorage","getItem","useState","search","setsearch","season","setseason","episode","setepisode","results","setresults","loading","setloading","Selected","setSelected","inputRef","useRef","onClickSearch","URl","toLowerCase","Promise","all","get","then","res1","res2","data1","data2","Response","Search","Episodes","newData","Array","isArray","length","items","map","each","cancelToken","c","Alert","error","catch","e","BetterSearch","fn","time","interval","args","clearTimeout","setTimeout","debounce","useEffect","current","focus","obj","mappedRes","maindata","local","setItem","stringify","filter","syncStorage","others","ref","style","borderRadius","width","type","name","placeholder","value","onChange","target","onSubmit","preventDefault","Dropdown","title","activeKey","onSelect","placement","Item","eventKey","Icon","icon","key","Loader","content","Boolean","location","hostname","match","Detail","setdata","params","id","Rated","Genre","Writer","Actors","Plot","history","goBack","cursor","size","Favs","AppNew","path","component","exact","ReactDOM","render","basename","pathname","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c6fcc56e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport './card.scss'\nimport { Button } from 'rsuite'\nimport { Link } from 'react-router-dom'\n\nfunction Card(props) {\n    const { Title, Year, Poster, markFav, isFav, imdbID, Released, Type, data, hideButton } = props\n    console.log(isFav)\n    return (\n        <div className=\"card\">\n            <Link to={`/${Type == undefined ? \"series\" : Type}/${imdbID}`}>\n                <div className=\"img-wrapper\">\n                    {\n                        Poster ?\n                            <img src={Poster} alt={Title} />\n                            : <p>Image not available</p>\n                    }\n                </div>\n            </Link>\n            <div className=\"content\">\n                <p className=\"title\">{Title}</p>\n                <p className=\"release-date\">{Released ? Released : Year}</p>\n                {\n                    !hideButton\n                        ? <Button color={isFav ? \"red\" : \"blue\"} onClick={() => markFav(data, !isFav)}>{isFav ? \"Unfavourite\" : \"Favourite\"}</Button>\n                        : null\n                }\n\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport logo from './logo.svg';\nimport './App.scss';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, Icon, Loader, Alert } from 'rsuite';\nimport Card from './card';\nimport axios from 'axios'\n\nconst CancelToken = axios.CancelToken;\n\nlet cancel;\n\nconst debounce = (fn, time) => {\n  let interval\n  return (...args) => {\n    clearTimeout(interval)\n\n    interval = setTimeout(() => {\n      fn(...args)\n\n    }, time)\n    console.log(\"running!!!!!!!!!!!!!!\", interval)\n  }\n}\n\nconst syncStorage = (maindata, data, isFav) => {\n  const local = JSON.parse(window.localStorage.getItem(\"favs\")) || []\n  if (!isFav) {\n    return window.localStorage.setItem(\"favs\", JSON.stringify(local.filter(each => each.imdbID !== data.imdbID)))\n  }\n  else {\n    data.isFav = true\n    local.push(data)\n    window.localStorage.setItem(\"favs\", JSON.stringify(local))\n  }\n\n  // const id = local.some(({ imdbID }) => imdbID === data.imdbID)\n  // console.log(\"222222222222222222222\", id)\n  // if (id) {\n  //   for (let item of local) {\n  //     if (item.imdbID === data.imdbID) {\n  //       item = data\n  //     }\n  //   }\n  // }\n  // else {\n  //   local.push(data)\n  // }\n  // window.localStorage.setItem(\"favs\", JSON.stringify(local))\n}\nconst getFavs = (data, localData) => {\n  const a = {}\n  for (let item of localData) {\n    if (item.isFav) {\n      a[item.imdbID] = true\n    }\n  }\n  const b = []\n  for (let item of data) {\n    if (item.imdbID in a) {\n      b.push({\n        ...item,\n        isFav: true\n      })\n    }\n    else {\n      b.push({\n        ...item,\n        isFav: false\n      })\n    }\n  }\n  return b\n}\nfunction App(props) {\n  const storage = JSON.parse(window.localStorage.getItem(\"favs\"))\n\n  const [search, setsearch] = useState('war')\n  const [season, setseason] = useState(1)\n  const [episode, setepisode] = useState(1)\n  const [results, setresults] = useState(null)\n  const [loading, setloading] = useState(false)\n  const [Selected, setSelected] = useState('All')\n  const inputRef = useRef()\n  const onChange = (e) => {\n    // set[e.target.name](e.target.value)\n  }\n  const onSubmitSearch = (e) => {\n    console.log(\"sss => \", season)\n    e.preventDefault()\n\n  }\n\n  const onClickSearch = () => {\n    console.log(\"sss => \", season)\n    let URl = `https://www.omdbapi.com/?s=${search}&type=${Selected.toLowerCase()}&apikey=44a4d11c&page=1`\n    if (Selected === \"Season\") URl = `https://www.omdbapi.com/?t=${search}&type=series&Season=${season}&apikey=44a4d11c&page=1`\n    if (Selected === \"Episode\") URl = `https://www.omdbapi.com/?t=${search}&type=series&Episode=${episode}&apikey=44a4d11c&page=1`\n\n    if (cancel !== undefined) {\n      cancel();\n    }\n    setloading(true)\n    if (Selected === \"All\") {\n      Promise.all([axios.get(`https://www.omdbapi.com/?s=${search}&Type=movie&apikey=44a4d11c&page=1`), axios.get(`https://www.omdbapi.com/?s=${search}&Type=series&apikey=44a4d11c&page=1`)])\n        .then(([res1, res2]) => {\n          console.log(\"data => \", res1)\n          const data1 = res1.data\n          const data2 = res2.data\n          if (data1.Response == \"True\" && data2.Response == \"True\") {\n            const a = data1.Search || data1.Episodes || [data1]\n            const b = data2.Search || data2.Episodes || [data2]\n            const newData = [...a, ...b]\n            if (storage && Array.isArray(storage) && storage.length) {\n              const items = getFavs(newData, storage)\n              setresults(items)\n            }\n            else {\n              setresults(newData.map(each => ({ ...each, isFav: false })))\n            }\n            setloading(false)\n          }\n        })\n    }\n    else {\n      axios.get(URl, {\n        cancelToken: new CancelToken(function executor(c) {\n          cancel = c;\n        }),\n      })\n        .then(({ data }) => {\n          if (data.Response == \"True\") {\n            console.log(\"data => \", data)\n            if (storage && Array.isArray(storage) && storage.length) {\n              const items = getFavs(data.Search || data.Episodes || [data], storage)\n              setresults(items)\n            }\n            else {\n              setresults(data.Search ? data.Search.map(each => ({ ...each, isFav: false })) : data.Episodes ? data.Episodes.map(each => ({ ...each, isFav: false })) : [data].map(each => ({ ...each, isFav: false })))\n            }\n            setloading(false)\n          }\n          else {\n            Alert.error(`No results found for \"${search}\"`)\n            setloading(false)\n            setresults(null)\n          }\n\n        })\n        .catch(e => {\n          // Alert.warning(e)\n        })\n    }\n\n  }\n  const BetterSearch = debounce(onClickSearch, 500)\n  useEffect(() => {\n    search.length && BetterSearch()\n    return () => {\n    }\n  }, [search])\n\n  useEffect(() => {\n    console.log(\"got\", results)\n    return () => {\n    }\n  }, [results])\n  useEffect(() => {\n    if (Selected === \"Episode\" || Selected === \"Season\") {\n      if (inputRef && inputRef.current) inputRef.current.focus()\n    }\n    return () => {\n    }\n  }, [Selected])\n\n  const select = (e, a) => setSelected(e)\n\n  const markFav = (obj, isFav) => {\n    console.log(\"sssssssssssssss\", obj)\n\n    const mappedRes = results.map(each => {\n      return {\n        ...each,\n        isFav: obj.imdbID === each.imdbID ? isFav : each.isFav\n      }\n    })\n    console.log(\"sssssssssssssss\", mappedRes, obj)\n    setresults(mappedRes)\n    syncStorage(mappedRes, obj, isFav)\n  }\n  let others = null\n  if (Selected === \"Season\") {\n    others = (\n      <div className=\"others\">\n        <span>Season</span>\n        <input ref={inputRef} style={{ borderRadius: 0, width: \"50px\" }} type=\"text\" name=\"season\" placeholder=\"Seasons ex: 1\" className=\"default-input\" value={season} onChange={(e) => setseason(e.target.value)} />\n      </div>\n    )\n  }\n  if (Selected === \"Episode\") {\n    others = (\n      <div className=\"others\">\n        <span>Season</span>\n        <input ref={inputRef} style={{ borderRadius: 0, width: \"50px\" }} type=\"text\" name=\"season\" className=\"default-input\" value={season} onChange={(e) => setseason(e.target.value)} />\n        <span>Episode</span>\n        <input style={{ borderRadius: 0, width: \"50px\" }} type=\"text\" name=\"season\" className=\"default-input\" value={episode} onChange={(e) => setepisode(e.target.value)} />\n      </div>\n    )\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"logo\">Movie Mania</div>\n        <div className=\"favourites\">\n          <Link to=\"/favs\">Favourites</Link>\n        </div>\n      </div>\n      <div className=\"main\">\n        <div className=\"search-wrapper\">\n          <div className=\"search-inner\">\n            <form onSubmit={onSubmitSearch}>\n              <input type=\"text\" name=\"search\" placeholder=\"search for a movie\" className=\"default-input\" value={search} onChange={(e) => setsearch(e.target.value)} />\n              <Dropdown title={Selected} activeKey={Selected} onSelect={select} placement=\"bottomEnd\">\n                <Dropdown.Item eventKey=\"All\" >All</Dropdown.Item>\n                <Dropdown.Item eventKey=\"Movie\" >Movies</Dropdown.Item>\n                <Dropdown.Item eventKey=\"Series\">Series</Dropdown.Item>\n                <Dropdown.Item eventKey=\"Season\">Season</Dropdown.Item>\n                <Dropdown.Item eventKey=\"Episode\">Episode</Dropdown.Item>\n              </Dropdown>\n              {\n                others\n              }\n              <span className=\"search-icon\" onClick={onClickSearch}>\n                <Icon icon=\"search\" />\n              </span>\n            </form>\n          </div>\n        </div>\n        {\n          !loading && !results\n            ? <div className=\"loading-wrapper\">\n              <p>Search for a {Selected}</p>\n            </div>\n            : !loading && results && results.length\n              ? <div className=\"main-content\">\n                {\n                  results.map(each => {\n                    return <Card key={each.imdbID} {...each} markFav={markFav} data={each} />\n                  })\n                }\n              </div>\n              : !loading && results && !results.length\n                ? <div className=\"main-content\">No results found for \"{search}\"</div>\n                : <div className=\"loading-wrapper\">\n                  <Loader content=\"loading...\" />\n                </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport './detail.scss'\nimport { Icon, Loader } from 'rsuite'\n\nfunction Detail(props) {\n    console.log(\"sasdasdasdasdasdas\", props)\n    const [data, setdata] = useState(null)\n\n    useEffect(() => {\n        axios.get(`https://www.omdbapi.com/?i=${props.match.params.id}&&apikey=44a4d11c`)\n            .then(({ data }) => {\n                setdata(data)\n            })\n        return () => {\n        }\n    }, [])\n    const { Title, Year, Rated, Released, Genre, Writer, Actors, Plot, Poster } = data || {}\n    return Poster ? <div className=\"movie-detail\">\n        <div className=\"movie-detail-inner\">\n            <span onClick={() => props.history.goBack()} style={{ cursor: \"pointer\" }}>\n                <Icon icon=\"back-arrow\" size=\"2x\" />\n            </span>\n            <img src={Poster} alt=\"\" />\n            <p>{Title}</p>\n            <p>{Released}</p>\n            <p>{Genre}</p>\n            <p>{Writer}</p>\n            <p>{Actors}</p>\n        </div>\n    </div>\n        : <div className=\"loader-wrapper\">\n            <Loader content=\"loading...\" />\n        </div>\n}\n\nexport default Detail","import React, { useState } from 'react'\nimport Card from './card'\nimport './card.scss'\nimport { Icon } from 'rsuite'\n\nconst syncStorage = (maindata, data, isFav) => {\n    const local = JSON.parse(window.localStorage.getItem(\"favs\")) || []\n    if (!isFav) {\n        return window.localStorage.setItem(\"favs\", JSON.stringify(local.filter(each => each.imdbID !== data.imdbID)))\n    }\n    else {\n        data.isFav = true\n        local.push(data)\n        window.localStorage.setItem(\"favs\", JSON.stringify(local))\n    }\n}\n\nfunction Favs(props) {\n    const storage = JSON.parse(window.localStorage.getItem(\"favs\"))\n    const [results, setresults] = useState(storage)\n    const markFav = (obj, isFav) => {\n        const mappedRes = results.filter(each => each.imdbID !== obj.imdbID)\n        console.log(\"sssssssssssssss\", mappedRes, obj)\n        setresults(mappedRes)\n        syncStorage(\"\", obj, isFav)\n    }\n    return (\n        <div className=\"favs-wrapper\">\n            <div className=\"favs-inner\">\n                <span onClick={() => props.history.goBack()}><Icon icon=\"back-arrow\" size=\"2x\" /></span>\n\n                {\n                    <div className=\"main-content\">\n                        {\n                            results && results.length\n                                ? results.map(each => {\n                                    return <Card key={each.imdbID} {...each} data={each} markFav={markFav} />\n                                })\n                                : <p className=\"no-movies\"> No movies in your favourite list</p>\n                        }\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Favs\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Route, Switch, HashRouter } from 'react-router-dom'\nimport Detail from './detail';\nimport Favs from './favs';\n\nconst AppNew = <Switch>\n  <Route path=\"/:type/:id\" component={Detail} />\n  <Route path=\"/favs\" component={Favs} />\n  <Route exact path=\"/\" component={App} />\n\n</Switch>\n\nReactDOM.render(\n  <HashRouter basename={window.location.pathname || ''}>\n    {AppNew}\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}